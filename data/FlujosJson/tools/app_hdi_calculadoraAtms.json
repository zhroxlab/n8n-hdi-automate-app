{
  "name": "app-hdi-calculadoraAtms",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -380,
        80
      ],
      "id": "0cfb6861-cf1a-4f03-9817-7740879d8c38",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "jsCode": "const dispensado = $input.first().json.dispensado;\nconst certificadoTDV = $input.first().json.certificadoTDV;\nconst prov_Total = $input.first().json.prov_Total;\nconst billValues = $input.first().json.billValues\n\nfunction calculadora(dispensado, certificadoTDV, prov_Total, billValues) {\n    const remanente = {};\n    for (const type in prov_Total) {\n        remanente[type] = prov_Total[type] - dispensado[type];\n    }\n\n    let total_remanente = 0;\n    for (const type in remanente) {\n        total_remanente += remanente[type] * billValues[type];\n    }\n\n    return certificadoTDV - total_remanente;\n}\n\nconst resultadoFaltante = calculadora(dispensado, certificadoTDV, prov_Total, billValues);\n\n// ✅ n8n Tools Agent solo acepta string plano como respuesta\nreturn [\n  {\n    json: {\n      faltante: resultadoFaltante\n    }\n  }\n];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        -120
      ],
      "id": "d7625105-2ca9-4eb2-8e13-ff20f6cc8490",
      "name": "Code"
    },
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "\n  {\n      \"certificadoTDV\": 97830000,\n      \"dispensado\": {\n        \"TYPE1\": 3361,\n        \"TYPE2\": 0,\n        \"TYPE3\": 1924,\n        \"TYPE4\": 1725\n      },\n      \"prov_Total\": {\n        \"TYPE1\": 1023,\n        \"TYPE2\": 1023,\n        \"TYPE3\": 1023,\n        \"TYPE4\": 1023\n      },\n      \"billValues\": {\n        \"TYPE1\": 50000,\n        \"TYPE2\": 50000,\n        \"TYPE3\": 20000,\n        \"TYPE4\": 10000\n      }\n  }\n"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -380,
        -120
      ],
      "id": "adcd5fc1-739b-4953-94af-c84fdb949e7f",
      "name": "When Executed by Another Workflow",
      "notesInFlow": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n  {\n      \"certificadoTDV\": 97830000,\n      \"dispensado\": {\n        \"TYPE1\": 3361,\n        \"TYPE2\": 0,\n        \"TYPE3\": 1924,\n        \"TYPE4\": 1725\n      },\n    \"prov_Total\": \n{\n\"TYPE1\": \n1023,\n\"TYPE2\": \n1023,\n\"TYPE3\": \n1023,\n\"TYPE4\": \n1023\n},\n      \"billValues\": {\n        \"TYPE1\": 50000,\n        \"TYPE2\": 50000,\n        \"TYPE3\": 20000,\n        \"TYPE4\": 10000\n      }\n  }\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -180,
        80
      ],
      "id": "ea82d3e1-b8f7-4c04-a580-efe10cee956d",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "olaQbIhYtGacj1jb",
          "mode": "list",
          "cachedResultName": "app-hdi-calculadoraAtms"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "certificadoTDV": "={{ $json.certificadoTDV }}",
            "dispensado": "={{ $json.dispensado }}",
            "prov_Total": "={{ $json.prov_Total }}",
            "billValues": "={{ $json.billValues }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "certificadoTDV",
              "displayName": "certificadoTDV",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "dispensado",
              "displayName": "dispensado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "prov_Total",
              "displayName": "prov_Total",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "billValues",
              "displayName": "billValues",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        60,
        80
      ],
      "id": "b0bbf035-c3cb-40b4-88d4-ce19d0536d27",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "jsCode": "// Obtener las variables de entrada desde el nodo anterior\nconst dispensado = $json.dispensado;\nconst certificadoTDV = $json.certificadoTDV;\nconst prov_Total = $json.prov_Total;\nconst billValues = $json.billValues;\n\n// Función calculadora\nfunction calculadora(dispensado, certificadoTDV, prov_Total, billValues) {\n    // Paso 1: Calcular los valores de \"remanente\" para cada Type\n    const remanente = {};\n    for (const type in prov_Total) {\n        remanente[type] = prov_Total[type] - dispensado[type];\n    }\n\n    // Paso 2: Calcular el total_remanente\n    let total_remanente = 0;\n    for (const type in remanente) {\n        total_remanente += remanente[type] * billValues[type];\n    }\n\n    // Paso 3: Calcular y retornar el faltante\n    const faltante = certificadoTDV - total_remanente;\n    return faltante;\n}\n\n// Llamar a la función calculadora\nconst resultadoFaltante = calculadora(dispensado, certificadoTDV, prov_Total, billValues);\n\n// Retornar el resultado\n/*\nreturn {\n    json: {\n        faltante: resultadoFaltante,\n    },\n};\n*/\n// ✅ n8n Tools Agent solo acepta string plano como respuesta\n\nreturn resultadoFaltante.toString();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -380,
        260
      ],
      "id": "a41eecb0-4674-4cfc-82b3-6679b1ee122c",
      "name": "Code1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Ejemplo entrada atmCalculadora\n### Entrada\n```json\n  {\n      \"certificadoTDV\": 97830000,\n      \"dispensado\": {\n        \"TYPE1\": 3361,\n        \"TYPE2\": 0,\n        \"TYPE3\": 1924,\n        \"TYPE4\": 1725\n      },\n      \"prov_Total\": {\n        \"TYPE1\": 1023,\n        \"TYPE2\": 1023,\n        \"TYPE3\": 1023,\n        \"TYPE4\": 1023\n      },\n      \"billValues\": {\n        \"TYPE1\": 50000,\n        \"TYPE2\": 50000,\n        \"TYPE3\": 20000,\n        \"TYPE4\": 10000\n      }\n  }\n```\n\n### Salida:\n```json\n{\n  \"faltante\": 188620000\n}\n```",
        "height": 660,
        "width": 400,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -840,
        -300
      ],
      "id": "85e69ded-a039-4864-ac70-563d1367d1ff",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "- certificadoTDV: del documento gestion columna REMANENTES\n- dispensado: de la tira\n- prov_total: \n- billValues: documento cp",
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -420,
        -320
      ],
      "id": "052190de-9515-4a74-a9d7-8048aba671d8",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        []
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "16f689be-6e46-41e2-a936-ef99fe5f79ec",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae116b9c25ca09b6fc49d8e730094c0929b168373f3afe3e106b7c23d9778cc3"
  },
  "id": "olaQbIhYtGacj1jb",
  "tags": []
}