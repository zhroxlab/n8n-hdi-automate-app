{
  "name": "app_hdi_readFile",
  "nodes": [
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n  \"pathGestion\": \"./data/_gestion/inSara.xlsx\"\n}\n"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -100,
        -80
      ],
      "id": "61f5fdde-f9e4-4be5-9fda-f1220da3712a",
      "name": "When Executed by Another Workflow",
      "notesInFlow": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -100,
        280
      ],
      "id": "5aeea184-4335-4624-9efd-0def2fe51615",
      "name": "When clicking ‘Test workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const newJson = {};\n  \n  for (const key in item.json) {\n    // Elimina solo espacios al inicio y al final de la clave\n    const cleanKey = key.trim();\n    newJson[cleanKey] = item.json[key];\n  }\n\n  return {\n    json: newJson\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        60
      ],
      "id": "12dd3d99-a01a-4466-a688-e3fd3b785d2e",
      "name": "Trim(Campos)",
      "notesInFlow": true,
      "disabled": true,
      "notes": "Elimina espacios en nombres de campo"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"pathGestion\": \"/Users/imfabra/Developer/repos/hdi_automate/data/_gestion/inSara.xlsx\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        280
      ],
      "id": "7c67c57f-2992-4ee4-8268-b6fd845def56",
      "name": "SetPathManual1",
      "disabled": true,
      "notes": "Se ingresa manualmente la ruta del archivo que se quiere leer desde disco."
    },
    {
      "parameters": {
        "jsCode": "\nreturn [{ pathGestion: $json[\"pathGestion\"] !== undefined ? $json[\"pathGestion\"] : $json[\"body\"][\"pathGestion\"] }];\n \n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        300,
        60
      ],
      "id": "3c42db20-7a92-42e8-891b-6f843d78002d",
      "name": "ValidateSourcePath1",
      "notes": "Valida cual de los dos orígenes que indican la ruta de archivo tienen un valor y lo envía al siguiente nodo."
    },
    {
      "parameters": {
        "content": "## Recomendaciones de uso \n***Workflow: app_hdi_readFile***\n\n* Mantenga inactivo el nodo de click debido a que si se activa presentará conflicto de ejecución con el nodo **When Executed by another workflow**. Sólo activar si se quiere ejecutar manualmente.",
        "height": 260,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        280
      ],
      "id": "425ec485-fb7d-4b16-ac02-126d5316be21",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        720,
        -80
      ],
      "id": "b3f6b8b0-6f5b-4f9a-aef3-b4b968dc24eb",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "app_hdi_readFile",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -100,
        100
      ],
      "id": "4de970ae-dd75-47da-a906-bfaade005bac",
      "name": "Webhook",
      "webhookId": "8106f96b-6681-473f-8875-edd9751689d5"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.pathGestion }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        500,
        60
      ],
      "id": "926ed2c5-0f58-42c6-86fd-86cd5788158a",
      "name": "Read/Write Files from Disk",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        720,
        60
      ],
      "id": "0f40b055-a77f-47c2-89b0-72e7c39d3ec6",
      "name": "Extract from File1",
      "disabled": true
    },
    {
      "parameters": {
        "command": "=node ./data/_scripts/code-data-gestion-to-db/code-data-gestion-to-db.js {{ $json.pathGestion }}\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        500,
        -80
      ],
      "id": "fe10d1c4-9222-4931-9762-cc15ea326f6d",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "jsCode": "// Obtenemos todos los elementos de entrada con $input.all()\nconst inputItems = $input.all();\n\n// Mapeamos los elementos para devolver solo el contenido de 'json' con claves numeradas\nreturn inputItems.map((item, index) => {\n  const key = `json${index}`; // Generamos la clave como json0, json1, etc.\n  return {\n    [key]: Object.assign({}, item.json) // Usamos solo item.json, sin incluir pairedItem\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        60
      ],
      "id": "05f44a0d-3273-4ced-824a-cf2684be18af",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const result = {};\nitems.forEach((item, index) => {\n  const key = `json${index}`;\n  const innerKey = Object.keys(item.json)[0];\n  result[key] = item.json[innerKey];\n});\n\nconst jsonString = JSON.stringify(result).replace(/\"/g, '\\\\\"');\n\nreturn [\n  {\n    json: {\n      jsonArg: jsonString\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1300,
        60
      ],
      "id": "dece7be5-85af-4153-8295-5c43dcfa16a5",
      "name": "Code1",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "ValidateSourcePath1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "SetPathManual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trim(Campos)": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetPathManual1": {
      "main": [
        [
          {
            "node": "ValidateSourcePath1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ValidateSourcePath1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "ValidateSourcePath1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Trim(Campos)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8a858bc3-3072-4a8e-9f1c-075c7df1dc3c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae116b9c25ca09b6fc49d8e730094c0929b168373f3afe3e106b7c23d9778cc3"
  },
  "id": "oCF8eYfMwHY96LWk",
  "tags": []
}