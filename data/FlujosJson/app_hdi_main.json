{
  "name": "app_hdi_main",
  "nodes": [
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2140,
        120
      ],
      "id": "372683b0-5c8b-4a03-ac05-e6d5f5469b82",
      "name": "Respond to Webhook",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos de la entrada del nodo anterior\nconst items = $input.all();\n\n// Filtrar los registros donde \"ESTADO\" sea \"FALTANTE\" y \"REMANENTES\" y \"PROVISIONES\" no sean ambos 0\nconst filteredItems = items.filter(item => {\n    const estado = item.json[\" ESTADO \"]?.trim() === \"SOBRANTE\";\n    const remanentes = item.json[\" REMANENTES \"] || 0;\n    //const provisiones = item.json[\" PROVISIONES \"] || 0;\n\n    return estado && remanentes !== 0 //(remanentes !== 0 || provisiones !== 0);\n});\n\n// Retornar los registros filtrados\nreturn filteredItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        60
      ],
      "id": "09e30555-3dd5-478e-bf82-22f32f228164",
      "name": "FiltroAtmSobrantes",
      "notes": "Filtro de cajeros, Estado en Sobrantes "
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "numberInputs": 4,
        "useDataOfInput": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        560,
        120
      ],
      "id": "cab340bb-71b5-4771-8921-e331f4cbfa38",
      "name": "Merge"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"pathGestion\": \"./data/_gestion/inSara.xlsx\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        440
      ],
      "id": "5ce78659-80e6-4891-b193-647d9b37df11",
      "name": "path_gestion"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "oCF8eYfMwHY96LWk",
          "mode": "list",
          "cachedResultName": "app_hdi_readFile"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "pathGestion": "={{ $json.pathGestion }}"
          },
          "matchingColumns": [
            "pathGestion"
          ],
          "schema": [
            {
              "id": "pathGestion",
              "displayName": "pathGestion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        240,
        440
      ],
      "id": "fd53568d-f1bb-4a91-a003-5f4d9ff48689",
      "name": "_readFile"
    },
    {
      "parameters": {
        "content": "## Lectura archivos\n> Time: 8seg",
        "height": 240,
        "width": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        380
      ],
      "id": "47068e5d-fc25-43b0-965e-0a98b2ee70c9",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Categorizar Atms  \n> Sobrantes\n> Faltantes",
        "height": 340,
        "width": 580
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        0
      ],
      "id": "bf795b6e-ce8d-4092-9a06-c500595b86a8",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Ejecucion Agente Cuadre\nSe calculan los datos para el promt del agente",
        "height": 320,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1660,
        0
      ],
      "id": "f9de5a4a-b6da-49c2-849f-d1da8db14549",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Update Tira / Historico\n> Time: 62seg\n\n\n\n\n\n\n\n\n\n\n> Time: 19seg",
        "height": 560,
        "width": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        -200
      ],
      "id": "2474c809-7b43-49e0-9470-486f44a8ec2f",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -300,
        160
      ],
      "id": "f9954157-be0d-4422-ac81-512c376b2083",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n{\n  \"rutaNCR\": \"./data/_scripts/code-data-tira-to-db/pull-tira/sbmdebst10_auth_tira_ncr031725.rpt\",\n  \"rutaDiebold\": \"./data/_scripts/code-data-tira-to-db/pull-tira/sbmdebst10_auth_tira_die031725.rpt\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        -140
      ],
      "id": "a66b032c-85d5-4a61-9d4b-0bc364438413",
      "name": "path_tira"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"pathPython\": \"./data/_scripts/migrar_excel_mongo.py\",\n  \"pathExcel\": \"./data/_historico/HISTORICO.xlsx\",\n  \"connectionStringMongo\": \"mongodb://localhost:27017\",\n  \"nombreDB\": \"db_app_hdi\",\n  \"nombreColection\": \"historico_atms\",\n  \"lote\":\"10000\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        20
      ],
      "id": "375aba81-87a8-4311-bc7c-7374a03a8661",
      "name": "path_historico"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "YI4MYTbFkAJ0sEmo",
          "mode": "list",
          "cachedResultName": "app_hdi_loadFileHistorico"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "pathPython": "={{ $json.pathPython }}",
            "pathExcel": "={{ $json.pathExcel }}",
            "connectionStringMongo": "={{ $json.connectionStringMongo }}",
            "nombreDB": "={{ $json.nombreDB }}",
            "nombreColection": "={{ $json.nombreColection }}",
            "lote": "={{ $json.lote }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "pathPython",
              "displayName": "pathPython",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "pathExcel",
              "displayName": "pathExcel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "connectionStringMongo",
              "displayName": "connectionStringMongo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "nombreDB",
              "displayName": "nombreDB",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "nombreColection",
              "displayName": "nombreColection",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "lote",
              "displayName": "lote",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        240,
        20
      ],
      "id": "9874d17b-8a76-4cf7-a00b-1683e17c3166",
      "name": "_loadFileHistorico"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "b6CUJVHb3IEuiEIt",
          "mode": "list",
          "cachedResultName": "app_hdi_tiraToDB"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "rutaNCR": "={{ $json.rutaNCR }}",
            "rutaDiebold": "={{ $json.rutaDiebold }}"
          },
          "matchingColumns": [
            "path"
          ],
          "schema": [
            {
              "id": "rutaNCR",
              "displayName": "rutaNCR",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "rutaDiebold",
              "displayName": "rutaDiebold",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        240,
        -140
      ],
      "id": "5d921594-c9a4-493c-808f-7bf463dc744e",
      "name": "_tiraToDB"
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos de la entrada del nodo anterior\nconst items = $input.all();\n\n// Filtrar los registros donde \"ESTADO\" sea \"FALTANTE\" y \"REMANENTES\" y \"PROVISIONES\" no sean ambos 0\nconst filteredItems = items.filter(item => {\n    const estado = item.json[\" ESTADO \"]?.trim() === \"FALTANTE\";\n    //const provisiones = item.json[\" PROVISIONES \"] || 0;\n\n    return estado //(remanentes !== 0 || provisiones !== 0);\n});\n\n// Retornar los registros filtrados\nreturn filteredItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        200
      ],
      "id": "087e12d0-a911-4893-b666-74d585ecd728",
      "name": "FiltroAtmFaltantes",
      "notes": "Filtro de cajeros, Estado en Sobrantes "
    },
    {
      "parameters": {
        "jsCode": "\n//return  $('FiltroAtmFaltantes').first().json\n\n\n// Obtener todos los ítems de las entradas\nconst atmsSobrantes = $('FiltroAtmSobrantes').all().map(item => item.json); // Datos de FiltroAtmSobrante (Input 1)\nconst atmsFaltantes = $('FiltroAtmFaltantes').all().map(item => item.json); // Datos de FiltroAtmFaltantes (Input 2)\n\n// Crear el nuevo JSON con la estructura deseada\nreturn [{\n    sobrantes: atmsSobrantes,\n    faltantes: atmsFaltantes\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        120
      ],
      "id": "bb45216f-7c04-42b5-8e93-db7b3ffe5692",
      "name": "atmsCategorizados"
    },
    {
      "parameters": {
        "jsCode": "const typeRules = $input.first().json.caseRule\nconst resultado = $('atmsCategorizados').first().json[typeRules].filter(atm => atm[\"CÓDIGO\"] === $input.first().json.numAtm);\n\nreturn {\"caseRule\": $input.first().json.caseRule, \"dataAtm\": resultado[0]};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        120
      ],
      "id": "a20e86e4-48c8-4b89-971a-d58758f7896b",
      "name": "FiltroEleccionCajero2"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"caseRule\": \"sobrantes\",\n  \"numAtm\": 8141\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1320,
        120
      ],
      "id": "d64ea2ea-b20c-474e-befa-772489407b69",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "dr8bcnG2aTPdO9p7",
          "mode": "list",
          "cachedResultName": "app_hdi_agMain"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "caseRule": "={{ $json.caseRule }}",
            "dataAtm": "={{ $json.dataAtm }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "caseRule",
              "displayName": "caseRule",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dataAtm",
              "displayName": "dataAtm",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1800,
        120
      ],
      "id": "8a2c7fb8-806e-47de-8e63-72b20b545fce",
      "name": "app_hdi_callAg_Main",
      "notes": "llamado a processHistorico para calcular fecha inicio ciclo, este workflow recibe el id del cajero que se va a cuadrar y debe retornar la fecha de inicio de ciclo segun el algoritmo, este consulta el historico para traer los datos registrados con ese CODIGO de cajero y calcula la fecha."
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        980,
        120
      ],
      "id": "4da91a7d-87cf-4de3-a1dc-5b650963d028",
      "name": "Merge2"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n  {\n    \"rutaCP\": \"./data/_cp/cp.xlsx\"\n  }\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        180
      ],
      "id": "cc1baf0a-ec73-4f1a-a21b-1a2bf12f0067",
      "name": "path_cp"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Lc0DSFyiFLEcQLVQ",
          "mode": "list",
          "cachedResultName": "app_hdi_cpToDB"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "rutaCP": "={{ $json.rutaCP }}"
          },
          "matchingColumns": [
            "rutaCP"
          ],
          "schema": [
            {
              "id": "rutaCP",
              "displayName": "rutaCP",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        240,
        180
      ],
      "id": "c92edaa8-75d3-4b3d-bc06-817b2826d75d",
      "name": "_loadCpToDB"
    }
  ],
  "pinData": {},
  "connections": {
    "FiltroAtmSobrantes": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "path_gestion": {
      "main": [
        [
          {
            "node": "_readFile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_readFile": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "FiltroAtmSobrantes",
            "type": "main",
            "index": 0
          },
          {
            "node": "FiltroAtmFaltantes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "path_gestion",
            "type": "main",
            "index": 0
          },
          {
            "node": "path_tira",
            "type": "main",
            "index": 0
          },
          {
            "node": "path_historico",
            "type": "main",
            "index": 0
          },
          {
            "node": "path_cp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "path_historico": {
      "main": [
        [
          {
            "node": "_loadFileHistorico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "path_tira": {
      "main": [
        [
          {
            "node": "_tiraToDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_tiraToDB": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_loadFileHistorico": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "FiltroAtmFaltantes": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "atmsCategorizados": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FiltroEleccionCajero2": {
      "main": [
        [
          {
            "node": "app_hdi_callAg_Main",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "FiltroEleccionCajero2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "app_hdi_callAg_Main": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "atmsCategorizados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "path_cp": {
      "main": [
        [
          {
            "node": "_loadCpToDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_loadCpToDB": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "85a9e0f3-95aa-486d-9bfe-ebc39bf9d8f8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae116b9c25ca09b6fc49d8e730094c0929b168373f3afe3e106b7c23d9778cc3"
  },
  "id": "KoojlRLoyucs5Z8z",
  "tags": []
}